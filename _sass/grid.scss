/*
 * Copyright (c) 2017, Inversoft Inc., All Rights Reserved
 */

@import 'variables';

//
// Column mixins
//
@mixin define-column($width, $multiplier) {
  flex-basis: calc(#{$width} - #{$grid-spacing * $multiplier});
  max-width: calc(#{$width} - #{$grid-spacing * $multiplier});
}

@mixin define-column-size($size) {
  .col-#{$size},
  .col-#{$size}-1,
  .col-#{$size}-2,
  .col-#{$size}-3,
  .col-#{$size}-4,
  .col-#{$size}-5,
  .col-#{$size}-6,
  .col-#{$size}-7,
  .col-#{$size}-8,
  .col-#{$size}-9,
  .col-#{$size}-10,
  .col-#{$size}-11,
  .col-#{$size}-12 {
    box-sizing: border-box;
    flex: 0 0 auto;
    margin-right: $grid-spacing;
    margin-left: $grid-spacing;

    &.tight-left {
      margin-left: 0;
    }

    &.tight-right {
      margin-right: 0;
    }

    &.tight-both {
      margin-left: 0;
      margin-right: 0;
    }
  }

  .col-#{$size} {
    flex-grow: 1;
    flex-basis: 0;
    width: calc(100% - #{$grid-spacing * 2});

    &.tight-both {
      width: calc(100%);
    }
  }

  .col-#{$size}-1 {
    @include define-column(8.33333333%, 2);

    &.tight-left {
      @include define-column(8.33333333%, 1);
    }

    &.tight-right {
      @include define-column(8.33333333%, 1);
    }

    &.tight-both {
      @include define-column(8.33333333%, 0);
    }
  }

  .col-#{$size}-2 {
    @include define-column(16.66666667%, 2);

    &.tight-left {
      @include define-column(16.66666667%, 1);
    }

    &.tight-right {
      @include define-column(16.66666667%, 1);
    }

    &.tight-both {
      @include define-column(16.66666667%, 0);
    }
  }

  .col-#{$size}-3 {
    @include define-column(25%, 2);

    &.tight-left {
      @include define-column(25%, 1);
    }

    &.tight-right {
      @include define-column(25%, 1);
    }

    &.tight-both {
      @include define-column(25%, 0);
    }
  }

  .col-#{$size}-4 {
    @include define-column(33.33333333%, 2);

    &.tight-left {
      @include define-column(33.33333333%, 1);
    }

    &.tight-right {
      @include define-column(33.33333333%, 1);
    }

    &.tight-both {
      @include define-column(33.33333333%, 0);
    }
  }

  .col-#{$size}-5 {
    @include define-column(41.66666667%, 2);

    &.tight-left {
      @include define-column(41.66666667%, 1);
    }

    &.tight-right {
      @include define-column(41.66666667%, 1);
    }

    &.tight-both {
      @include define-column(41.66666667%, 0);
    }
  }

  .col-#{$size}-6 {
    @include define-column(50%, 2);

    &.tight-left {
      @include define-column(50%, 1);
    }

    &.tight-right {
      @include define-column(50%, 1);
    }

    &.tight-both {
      @include define-column(50%, 0);
    }
  }

  .col-#{$size}-7 {
    @include define-column(58.33333333%, 2);

    &.tight-left {
      @include define-column(58.33333333%, 1);
    }

    &.tight-right {
      @include define-column(58.33333333%, 1);
    }

    &.tight-both {
      @include define-column(58.33333333%, 0);
    }
  }

  .col-#{$size}-8 {
    @include define-column(66.66666667%, 2);

    &.tight-left {
      @include define-column(66.66666667%, 1);
    }

    &.tight-right {
      @include define-column(66.66666667%, 1);
    }

    &.tight-both {
      @include define-column(66.66666667%, 0);
    }
  }

  .col-#{$size}-9 {
    @include define-column(75%, 2);

    &.tight-left {
      @include define-column(75%, 1);
    }

    &.tight-right {
      @include define-column(75%, 1);
    }

    &.tight-both {
      @include define-column(75%, 0);
    }
  }

  .col-#{$size}-10 {
    @include define-column(83.33333333%, 2);

    &.tight-left {
      @include define-column(83.33333333%, 1);
    }

    &.tight-right {
      @include define-column(83.33333333%, 1);
    }

    &.tight-both {
      @include define-column(83.33333333%, 0);
    }
  }

  .col-#{$size}-11 {
    @include define-column(91.66666667%, 2);

    &.tight-left {
      @include define-column(91.66666667%, 1);
    }

    &.tight-right {
      @include define-column(91.66666667%, 1);
    }

    &.tight-both {
      @include define-column(91.66666667%, 0);
    }
  }

  .col-#{$size}-12 {
    @include define-column(100%, 2);

    &.tight-left {
      @include define-column(100%, 1);
    }

    &.tight-right {
      @include define-column(100%, 1);
    }

    &.tight-both {
      @include define-column(100%, 0);
    }
  }

  .col-#{$size}-offset-0 {
    margin-left: $grid-spacing;
  }

  .col-#{$size}-offset-1 {
    margin-left: calc(8.33333333% + #{$grid-spacing});
  }

  .col-#{$size}-offset-2 {
    margin-left: calc(16.66666667% + #{$grid-spacing});
  }

  .col-#{$size}-offset-3 {
    margin-left: calc(25% + #{$grid-spacing});
  }

  .col-#{$size}-offset-4 {
    margin-left: calc(33.33333333% + #{$grid-spacing});
  }

  .col-#{$size}-offset-5 {
    margin-left: calc(41.66666667% + #{$grid-spacing});
  }

  .col-#{$size}-offset-6 {
    margin-left: calc(50% + #{$grid-spacing});
  }

  .col-#{$size}-offset-7 {
    margin-left: calc(58.33333333% + #{$grid-spacing});
  }

  .col-#{$size}-offset-8 {
    margin-left: calc(66.66666667% + #{$grid-spacing});
  }

  .col-#{$size}-offset-9 {
    margin-left: calc(75% + #{$grid-spacing});
  }

  .col-#{$size}-offset-10 {
    margin-left: calc(83.33333333% + #{$grid-spacing});
  }

  .col-#{$size}-offset-11 {
    margin-left: calc(91.66666667% + #{$grid-spacing});
  }

  .start-#{$size} {
    justify-content: flex-start;
  }

  .center-#{$size} {
    justify-content: center;
  }

  .end-#{$size} {
    justify-content: flex-end;
  }

  .top-#{$size} {
    align-items: flex-start;
  }

  .middle-#{$size} {
    align-items: center;
  }

  .bottom-#{$size} {
    align-items: flex-end;
  }

  .baseline-#{$size} {
    align-items: baseline;
  }

  .around-#{$size} {
    justify-content: space-around;
  }

  .between-#{$size} {
    justify-content: space-between;
  }

  .first-#{$size} {
    order: -1;
  }

  .last-#{$size} {
    order: 1;
  }

  .shrink {
    flex-grow: 0;
    flex-shrink: 1;
  }
}

//
// Container mixin
//
@mixin define-container($width) {
  .container {
    width: $width;
  }
}

//
// Fluid Container mixin
//
@mixin define-container-fluid($padding) {
  .container-fluid {
    padding-right: $padding;
    padding-left: $padding;
  }
}

.container-fluid,
.container {
  margin-right: auto;
  margin-left: auto;
}

.row {
  align-items: stretch;
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-direction: row;
  flex-wrap: wrap;
}

.column {
  align-content: stretch;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;

  > * {
    flex: 1 0 auto;
  }

  .baseline {
    flex: 0;
  }

  &.around {
    align-content: space-around;
  }

  &.between {
    align-content: space-between;
  }

  &.center {
    align-content: center;
  }

  &.end {
    align-content: flex-end;
  }

  &.start {
    align-content: flex-start;
  }
}

.row.reverse {
  flex-direction: row-reverse;
}

.col.reverse {
  flex-direction: column-reverse;
}

//
// Grid helpers
//
.align-items-center {
  align-items: center;
}

@include define-container-fluid(5px);
@include define-column-size(xs);

//
// Define the main grid
//
@each $break, $width, $container in $grid-sizes {
  @media only screen and (min-width: #{$width}px) {
    @include define-container(#{$container}px);
    @include define-column-size(#{$break});

    // Only need a fluid container at sm
    @if $break == sm {
      @include define-container-fluid(20px);
    }
  }
}